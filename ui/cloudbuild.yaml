steps:
  - name: node:20-alpine@sha256:b5b9467fe7b33aad47f1ec3f6e0646a658f85f05c18d4243024212a91f3b7554
    id: install
    dir: ui
    entrypoint: npm
    args: ['ci', '--no-optional']

  - name: node:20-alpine@sha256:b5b9467fe7b33aad47f1ec3f6e0646a658f85f05c18d4243024212a91f3b7554
    id: test
    dir: ui
    entrypoint: npm
    args: ['test']

  - name: 'gcr.io/cloud-builders/docker@sha256:36b09c6108c80f0564b52e516ac1e5e9ad3dd94783c3f67789b1534528eedd71'
    id: generate-image-name
    entrypoint: 'bash'
    dir: ui
    args:
      - '-c'
      - |
        echo "northamerica-northeast1-docker.pkg.dev/${PROJECT_ID}/safeinputs/ui:$BRANCH_NAME-$SHORT_SHA-$(date +%s)" > /workspace/imagename

  - name: 'gcr.io/cloud-builders/docker@sha256:36b09c6108c80f0564b52e516ac1e5e9ad3dd94783c3f67789b1534528eedd71'
    id: build-if-main
    entrypoint: 'bash'
    dir: ui
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]
        then
          image=$(cat /workspace/imagename)
          docker build -t $image -f ./Dockerfile.prod .
        else
          exit 0
        fi

  - name: 'gcr.io/cloud-builders/docker@sha256:36b09c6108c80f0564b52e516ac1e5e9ad3dd94783c3f67789b1534528eedd71'
    id: push-if-main
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]
        then
          image=$(cat /workspace/imagename)
          docker push $image
        else
          exit 0
        fi
