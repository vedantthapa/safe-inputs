steps:
  - name: node:20-alpine@sha256:eb8101caae9ac02229bd64c024919fe3d4504ff7f329da79ca60a04db08cef52
    id: install
    dir: ui
    entrypoint: npm
    args: ['ci', '--no-optional']

  - name: node:20-alpine@sha256:eb8101caae9ac02229bd64c024919fe3d4504ff7f329da79ca60a04db08cef52
    id: test
    dir: ui
    entrypoint: npm
    args: ['test']

  - name: 'gcr.io/cloud-builders/docker@sha256:f888bcad36d7d809aa06631c8eb9effa52f0aa39c1edea7e0b17ea6d128f7f6d'
    id: generate-image-name
    entrypoint: 'bash'
    dir: ui
    args:
      - '-c'
      - |
        echo "northamerica-northeast1-docker.pkg.dev/${PROJECT_ID}/safeinputs/ui:$BRANCH_NAME-$SHORT_SHA-$(date +%s)" > /workspace/imagename

  - name: 'gcr.io/cloud-builders/docker@sha256:f888bcad36d7d809aa06631c8eb9effa52f0aa39c1edea7e0b17ea6d128f7f6d'
    id: build-if-main
    entrypoint: 'bash'
    dir: ui
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]
        then
          image=$(cat /workspace/imagename)
          docker build -t $image -f ./Dockerfile.prod .
        else
          exit 0
        fi

  - name: 'gcr.io/cloud-builders/docker@sha256:f888bcad36d7d809aa06631c8eb9effa52f0aa39c1edea7e0b17ea6d128f7f6d'
    id: push-if-main
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" ]]
        then
          image=$(cat /workspace/imagename)
          docker push $image
        else
          exit 0
        fi
